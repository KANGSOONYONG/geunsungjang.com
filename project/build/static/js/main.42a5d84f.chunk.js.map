{"version":3,"sources":["hooks/useFetch.js","component/Navigator.js","component/Mainpage.js","component/Form.js","component/Contents.js","component/Comments.js","component/LoginPage.js","component/Signup.js","component/CreateList.js","component/CreateYoutuber.js","component/Paperbase.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","data","setData","useEffect","fetch","headers","then","res","json","item","py","px","color","bgcolor","itemCategory","boxShadow","usertoken","localStorage","getItem","Navigator","props","other","youtuber","siteName","Drawer","variant","List","disablePadding","ListItem","sx","fontSize","component","RouterLink","to","ListItemIcon","ListItemText","onClick","e","removeItem","method","ok","console","log","window","location","reload","catch","err","Box","map","ListItemButton","as","fontWeight","textDecoration","id","page","Link","href","link","target","underline","name","Content","onDrawerToggle","Grid","container","spacing","alignItems","display","sm","xs","IconButton","width","index","Form","value","setValue","isOpen","setIsOpen","_id","Button","confirm","FormControl","onSubmit","preventDefault","flex","flexDirection","TextField","fullWidth","multiline","label","code","onChange","body","JSON","stringify","lightColor","Header","youParams","useParams","userRole","open","setOpen","AppBar","position","elevation","Toolbar","edge","zIndex","Typography","borderColor","size","subheader","ListSubheader","primary","Collapse","in","timeout","unmountOnExit","NestedList","comments","comment","setComment","commentNumber","length","limitComment","slice","number","success","type","LoginPage","email","setEmail","password","setPassword","theme","createTheme","navigate","useNavigate","ThemeProvider","Container","maxWidth","CssBaseline","marginTop","Avatar","m","loginSuccess","setItem","userToken","alert","noValidate","mt","margin","required","autoComplete","autoFocus","mb","passwordConfirm","setPasswordConfirm","setName","emailMessage","setEmailMessage","passwordMessage","setPasswordMessage","passwordConfirmMessage","setPasswordConfirmMessage","nameMessage","setNameMessage","isEmail","setIsEmail","isEmailType","setIsEmailType","isSameEmail","setIsSameEmail","isPassword","setIsPassword","isPasswordConfirm","setIsPasswordConfirm","isName","setIsName","emailCurrent","test","canUseEmail","disabled","Alert","severity","passwordCurrent","passwordConfirmCurrent","justifyContent","CreateYoutuber","siteNames","setSiteName","setCode","InputProps","readOnly","InputLabel","Select","labelId","MenuItem","SiteId","channelName","setChannelName","useRef","Copyright","align","Date","getFullYear","palette","light","main","dark","typography","h5","letterSpacing","shape","borderRadius","components","MuiTab","defaultProps","disableRipple","mixins","toolbar","minHeight","MuiDrawer","styleOverrides","paper","backgroundColor","MuiButton","root","textTransform","contained","MuiTabs","marginLeft","indicator","height","borderTopLeftRadius","borderTopRightRadius","common","white","minWidth","padding","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemButton","MuiListItemText","fontWeightMedium","MuiListItemIcon","marginRight","MuiAvatar","Paperbase","React","mobileOpen","setMobileOpen","isSmUp","useMediaQuery","handleDrawerToggle","flexShrink","PaperProps","style","onClose","path","element","Contents","p","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42a5d84f.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function useFetch(url) {\r\n\r\n    // 더미데이터 삭제\r\n    // 처음엔 빈 배열로 만들고 API에서 리스트를 가져와서 바꿔주는 방식\r\n    \r\n    const [data, setData] = useState([]); // 여기까지하면 youtuber가 안뜸, useEffect써야됨\r\n\r\n    // useEffect는 어떤 상태 값이 바뀌었을 때 동작하는 함수를 작성할 수 있음\r\n    useEffect(() => {\r\n        fetch(url, {\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            // return console.log(res);\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setData(data);\r\n        });\r\n    },[url]);\r\n\r\n    return data;\r\n}","import * as React from 'react';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport PublicIcon from '@mui/icons-material/Public';\r\nimport Link from '@mui/material/Link';\r\n\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nconst item = {\r\n  py: '2px',\r\n  px: 3,\r\n  color: 'rgba(255, 255, 255, 0.7)',\r\n  '&:hover, &:focus': {\r\n    bgcolor: 'rgba(255, 255, 255, 0.08)',\r\n  },\r\n};\r\n\r\nconst itemCategory = {\r\n  boxShadow: '0 -1px 0 rgb(255,255,255,0.1) inset',\r\n  py: 1.5,\r\n  px: 3,\r\n};\r\n\r\nconst usertoken = localStorage.getItem('userToken');\r\n\r\nconst logout = (e) => {\r\n    localStorage.removeItem('userToken')\r\n    fetch(`/api/users/logout`, {\r\n        method: 'GET'\r\n      })\r\n    .then(res => {\r\n        if (res.ok) {\r\n            console.log(\"로그아웃 완료\")\r\n            window.location.reload();\r\n        }\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nexport default function Navigator(props) {\r\n  const { ...other } = props;\r\n\r\n  const youtuber = useFetch('/api/youtubers');\r\n  const siteName = useFetch('/api/sitenames');\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...other}>\r\n      <List disablePadding>\r\n        <ListItem sx={{ ...item, ...itemCategory, fontSize: 22, color: '#fff' }} component={RouterLink} to='/'>\r\n          근성장코드닷컴\r\n        </ListItem>\r\n        <ListItem sx={{ ...item, ...itemCategory }} component={RouterLink} to='/' >\r\n          <ListItemIcon>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText>Home</ListItemText>\r\n        </ListItem>\r\n        {usertoken === null ? \r\n        <ListItem sx={{ ...item, ...itemCategory }} component={RouterLink} to=\"/login\" >\r\n          <ListItemText>로그인 / 회원가입</ListItemText>\r\n        </ListItem> :\r\n        <ListItem sx={{ ...item, ...itemCategory }} onClick={(e)=> logout(e)} >\r\n          <ListItemText>로그아웃</ListItemText>\r\n        </ListItem> \r\n        }\r\n        <Box sx={{ bgcolor: '#101F33' }}>\r\n          <ListItem sx={{ py: 2, px: 3 }}>\r\n            <ListItemText sx={{ color: '#fff' }}>유튜버</ListItemText>\r\n          </ListItem>\r\n          {youtuber.map((youtuber) => (\r\n            <ListItem disablePadding key={youtuber.id}>\r\n              <ListItemButton sx={item}>\r\n                <ListItemIcon><PeopleIcon /></ListItemIcon>\r\n                <ListItemText as={RouterLink} to={`/youtuber/${youtuber.youtuber}`} sx={{  color: 'inherit', fontWeight: 'bold', textDecoration: 'none'}}>{youtuber.youtuber}</ListItemText>\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </Box>\r\n        <Box sx={{ bgcolor: '#101F33' }}>\r\n          <ListItem sx={{ py: 2, px: 3 }}>\r\n            <ListItemText sx={{ color: '#fff' }}>사이트 바로가기</ListItemText>\r\n          </ListItem>\r\n          {siteName.map((page) => (\r\n            <ListItem disablePadding key={page.id}>\r\n              <ListItemButton sx={item}>\r\n                <ListItemIcon><PublicIcon /></ListItemIcon>\r\n                <ListItemText as={Link} href={page.link} target=\"blank\" underline=\"none\">{page.name}</ListItemText>\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </Box>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { ThemeProvider, createTheme } from '@mui/system';\r\n\r\nexport default function Content(props) {\r\n\r\n  const { onDrawerToggle } = props;\r\n\r\n  const youtuber = useFetch('/api/youtubers')\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid sx={{ display: { sm: 'none', xs: 'block' } }} item>\r\n          <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={onDrawerToggle}\r\n          >\r\n              <MenuIcon />\r\n          </IconButton>\r\n          </Grid>\r\n      </Grid>\r\n      <List sx={{ width: '100%'}}>\r\n        {youtuber.map((youtuber, index) => (\r\n            <ListItem item key={index}>\r\n                <ListItemButton \r\n                as={Link} to={`/youtuber/${youtuber.youtuber}`} \r\n                key={youtuber.id} \r\n                variant=\"contained\"\r\n                sx={{  color: 'text.primary', fontWeight: 'bold'}}\r\n                >\r\n                    {youtuber.youtuber}\r\n                </ListItemButton>\r\n            </ListItem>\r\n        ))}\r\n      </List>\r\n    </ >\r\n  );\r\n}","import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\nexport default function Form({ item }) {\r\n    const [value, setValue] = useState();    \r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const valueChange = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    console.log(\"-----------------------------form.js\");\r\n    console.log(item);\r\n    console.log(`/api/items/${item._id}`);\r\n    // 수정 기능 (PUT)\r\n    function put() {\r\n\r\n        if(window.confirm(\"수정 하시겠습니까?\")) {\r\n            fetch(`/api/items/${item._id}` , {\r\n                method : \"PUT\",\r\n                headers : {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body : JSON.stringify({\r\n                    code : value\r\n                })\r\n            })\r\n            .then(res => {\r\n                if(res.ok){\r\n                    console.log(\"수정 완료\");\r\n                    window.location.reload();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // 삭제 기능 (DELETE)\r\n    function del() {\r\n        if(window.confirm(\"삭제 하시겠습니까?\")) {\r\n            fetch(`/api/items/${item._id}`, {\r\n                method : 'DELETE'\r\n            }).then(res =>{\r\n                if(res.ok) {\r\n                    console.log(\"삭제 완료\");\r\n                    window.location.reload();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // 숨겨놓은 input 창 보이게 하기\r\n    const showInput = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    return(\r\n        <>\r\n            <List component=\"div\">\r\n                <ListItem>\r\n                    <Button variant=\"contained\" onClick={showInput}> {isOpen !== true ? \"수정\" : \"숨기기\" } </Button>\r\n                    {isOpen !== true ? (<Button variant=\"contained\"onClick={(e) => del(e)}>삭제</Button>) : null}\r\n                    {isOpen === true && \r\n                            <FormControl onSubmit={handleSubmit} sx={{flex: 1, display: 'flex', flexDirection: 'column'}}>\r\n                                <ListItem>\r\n                                    <TextField fullWidth id=\"fullWidth\" multiline label=\"수정할 코드\" variant=\"filled\" value={value || item.code } onChange={valueChange}/>\r\n                                    <Button variant=\"contained\" onClick={(e) => put(e)}>수정</Button>\r\n                                </ListItem>\r\n                            </FormControl>}\r\n                </ListItem>\r\n            </List>        \r\n        </>\r\n    )\r\n\r\n\r\n}","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport Form from \"./Form\";\r\n\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nfunction Header(props) {\r\n  const { onDrawerToggle } = props;\r\n\r\n  const youParams = useParams().youtuber;\r\n\r\n  const item = useFetch(`/api/items/youtuber/${youParams}`);\r\n  // localStorage를 sessionStorage로 바꾸어야할듯\r\n  const userRole = localStorage.getItem('userRole');\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Grid sx={{ display: { sm: 'none', xs: 'block' } }} item>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={onDrawerToggle}\r\n                edge=\"start\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n        sx={{ zIndex: 0 }}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                {youParams}\r\n              </Typography>\r\n            </Grid>\r\n            {userRole === \"1\" ? (\r\n              <>\r\n              <Grid item>\r\n                <Button\r\n                  sx={{ borderColor: lightColor }}\r\n                  variant=\"outlined\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={handleClick}\r\n                >\r\n                  수정 / 삭제\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  sx={{ borderColor: lightColor }}\r\n                  variant=\"outlined\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  component={Link}\r\n                  to={`/createList/${youParams}`}\r\n                >\r\n                  항목 추가\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  sx={{ borderColor: lightColor }}\r\n                  variant=\"outlined\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  component={Link}\r\n                  to={`/createyoutuber`}\r\n                >\r\n                  유튜버 추가\r\n                </Button>\r\n              </Grid>\r\n              </>\r\n            ) : null }\r\n            \r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <List\r\n        sx={{ bgcolor: 'background.paper', flex: 1, display: 'flex', flexDirection: 'column' }}\r\n        component=\"div\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n        subheader={\r\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n            코드 리스트 \r\n          </ListSubheader>\r\n        }\r\n      >\r\n      {item.map((item) => (\r\n        <>\r\n          <List key={item.id} component=\"div\">\r\n              {item.code !== null && \r\n              <ListItem>\r\n                <Grid item xs={12} sm={2}>\r\n                    <ListItemText primary={item.siteName} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={10}>\r\n                    <ListItemText primary={item.code} />\r\n                </Grid>\r\n              </ListItem>}\r\n          </List>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit >\r\n            <Form item={item}/>\r\n          </Collapse>\r\n        </>\r\n      ))}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Header;","import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nimport Button from '@mui/material/Button';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nexport default function NestedList() {\r\n  const comments = useFetch('/api/comments');\r\n\r\n  const [comment, setComment] = useState();\r\n  const commentNumber = comments.length + 1;\r\n\r\n  const limitComment = comments.slice(0, 6);\r\n\r\n  const commentChange = (e) => {\r\n    setComment(e.target.value)\r\n}\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n        fetch(`/api/comments/create` , {\r\n            method : \"POST\",\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body : JSON.stringify({\r\n                comment : comment,\r\n                number : commentNumber\r\n            })\r\n        })\r\n        .then((res) => res.json())\r\n        .then(res => {\r\n            if(res.success){\r\n                window.location.reload();\r\n            }\r\n        })\r\n        .catch((err) => console.log(err));\r\n}\r\n\r\n  return (\r\n  <>\r\n    <FormControl component=\"form\" onSubmit={handleSubmit} sx={{flex: 1, display: 'flex', flexDirection: 'column'}}>\r\n      <ListItem>\r\n        <TextField \r\n        fullWidth id=\"fullWidth\" \r\n        variant=\"filled\" \r\n        label=\"아무말이나 남기기\" \r\n        value={comment} onChange={commentChange}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\">전송</Button>\r\n      </ListItem>\r\n    </FormControl>\r\n    {limitComment.map((comment) => (\r\n      <ListItem >\r\n         <ListItemText primary={comment.comment} />\r\n      </ListItem >\r\n    ))}\r\n  </>\r\n  );\r\n}","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nexport default function LoginPage(props) {\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const emailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    \r\n    const passwordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    const theme = createTheme();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const goBack = () => {\r\n        navigate(-1);        \r\n    }\r\n    const handleSubmitSignUp = (e) => {\r\n        e.preventDefault();\r\n        \r\n        fetch(`api/users/login`, {\r\n            method: \"POST\",\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            }),\r\n        })\r\n        .then((res) => res.json())\r\n        .then((res) => { \r\n          if (res.loginSuccess) {\r\n            localStorage.setItem('userToken', `${res.userToken}`);\r\n            localStorage.setItem('userRole', `${res.userRole}`)\r\n            console.log(\"로그인 되었습니다.\");\r\n            navigate('/');\r\n            window.location.reload();\r\n          } else {\r\n            alert('이메일, 비밀번호를 확인해 주세요');\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    const { onDrawerToggle } = props;\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n                <Grid sx={{ display: { sm: 'none', xs: 'block' } }} item>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={onDrawerToggle}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n            <ThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            로그인\r\n                        </Typography>\r\n                        <Box component=\"form\" onSubmit={handleSubmitSignUp} noValidate sx={{ mt: 1 }}>\r\n                            <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"이메일\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={emailChange}\r\n                            />\r\n                            <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"비밀번호\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={passwordChange}\r\n                            />\r\n                            <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                            >\r\n                            로그인\r\n                            </Button>\r\n                            <Grid container>\r\n                            <Grid item xs>\r\n                                <Button variant=\"text\" onClick={goBack}>뒤로가기</Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button variant=\"text\" as={Link} to='/signup'>회원가입</Button>\r\n                            </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                </Container>\r\n            </ThemeProvider>\r\n            </>\r\n    )\r\n}","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Alert from '@mui/material/Alert';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nexport default function LoginPage(props) {\r\n    \r\n    // 뒤로가기 기능\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //이름, 이메일, 비밀번호, 비밀번호 확인\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [passwordConfirm, setPasswordConfirm] = useState();\r\n    const [name, setName] = useState();\r\n\r\n    //오류메시지 상태저장\r\n    const [emailMessage, setEmailMessage] = useState();\r\n    const [passwordMessage, setPasswordMessage] = useState();\r\n    const [passwordConfirmMessage, setPasswordConfirmMessage] = useState();\r\n    const [nameMessage, setNameMessage] = useState();\r\n\r\n    // 유효성 검사\r\n    const [isEmail, setIsEmail] = useState(false);\r\n    const [isEmailType, setIsEmailType] = useState(false);\r\n    const [isSameEmail, setIsSameEmail] = useState(false);\r\n    const [isPassword, setIsPassword] = useState(false);\r\n    const [isPasswordConfirm, setIsPasswordConfirm] = useState(false);\r\n    const [isName, setIsName] = useState(false);\r\n\r\n    // 이름\r\n    const onChangeName = (e) => {\r\n        setName(e.target.value)\r\n        if (e.target.value.length < 2) {\r\n          setNameMessage('2글자 이상 입력해주세요.');\r\n          setIsName(false);\r\n        } else {\r\n          setNameMessage('사용 가능한 닉네임입니다');\r\n          setIsName(true);\r\n        }\r\n      }\r\n    // 이메일\r\n    const onChangeEmail = (e) => {\r\n        const emailRegex =\r\n        /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\r\n        const emailCurrent = e.target.value\r\n        setEmail(emailCurrent)\r\n\r\n        if (!emailRegex.test(emailCurrent)) {\r\n            setEmailMessage('이메일 형식이 틀렸습니다.')\r\n            setIsEmail(false);\r\n            setIsSameEmail(false);\r\n            setIsEmailType(false);\r\n        } else {\r\n            setEmailMessage('사용 가능한 이메일입니다.')\r\n            setIsEmail(true);\r\n            setIsSameEmail(false);\r\n            setIsEmailType(true);\r\n        }\r\n    }\r\n    // 비밀번호\r\n    const onChangePassword = (e) => {\r\n        const passwordCurrent = e.target.value\r\n        setPassword(passwordCurrent);\r\n\r\n        if (passwordCurrent.length < 4) {\r\n            setPasswordMessage('비밀번호를 4자이상 입력해주세요');\r\n            setIsPassword(false);\r\n            setIsPasswordConfirm(false);\r\n        } else {\r\n            setPasswordMessage('사용 가능한 비밀번호입니다.');\r\n            setIsPassword(true);\r\n            if(passwordCurrent === passwordConfirm){\r\n                setIsPasswordConfirm(true);\r\n            } else {\r\n                setIsPasswordConfirm(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 비밀번호 확인\r\n    const onChangePasswordConfirm = (e) => {\r\n        const passwordConfirmCurrent = e.target.value;\r\n        setPasswordConfirm(passwordConfirmCurrent);\r\n\r\n        if (password === passwordConfirmCurrent) {\r\n            setPasswordConfirmMessage('비밀번호가 일치합니다.');\r\n            setIsPasswordConfirm(true);\r\n        } else {\r\n            setPasswordConfirmMessage('비밀번호가 일치하지 않습니다. 다시 입력해주세요.');\r\n            setIsPasswordConfirm(false);\r\n        }\r\n    }\r\n\r\n    // 회원가입 기능\r\n    const handleSubmitSignUp = (e) => {\r\n        e.preventDefault();\r\n        \r\n        fetch(`/api/users/register`, {\r\n            method: \"POST\",\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                email: email,\r\n                password: password\r\n            }),\r\n        })\r\n        .then((res) => res.json())\r\n        .then((res) => { \r\n            if (res.success) {\r\n            console.log(\"회원가입 완료\");\r\n            navigate(-1);\r\n            } else {\r\n            alert('회원가입에 실패하였습니다.');\r\n            }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    \r\n    // 중복 이메일 체크 기능\r\n    const sameEmailCheck = (e) => {\r\n        e.preventDefault();\r\n        \r\n        fetch(`/api/users/sameEmailCheck`, {\r\n            method: \"POST\",\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email\r\n            }),\r\n        })\r\n        .then((res) => res.json())\r\n        .then((res) => { \r\n          if (res.canUseEmail) {\r\n            alert(\"사용 가능한 이메일 주소입니다.\");\r\n            setIsSameEmail(true);\r\n          } else {\r\n            alert(\"이미 존재하는 이메일 입니다.\");\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    const theme = createTheme();\r\n\r\n    const { onDrawerToggle } = props;\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n                <Grid sx={{ display: { sm: 'none', xs: 'block' } }} item>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={onDrawerToggle}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n            <ThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                    >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        회원가입\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmitSignUp} sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"이메일\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                autoFocus\r\n                                value={email} onChange={onChangeEmail}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Button\r\n                                required\r\n                                fullWidth\r\n                                variant=\"contained\" \r\n                                onClick={sameEmailCheck} \r\n                                disabled={!(isEmailType)}\r\n                                >\r\n                                중복확인\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {email  ? (isEmail === false ? <Alert severity=\"error\">{emailMessage}</Alert> : <Alert severity=\"success\">{emailMessage}</Alert>) : null}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"비밀번호\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"new-password\"\r\n                                value={password} onChange={onChangePassword}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {password  ? (isPassword === false ? <Alert severity=\"error\">{passwordMessage}</Alert> : <Alert severity=\"success\">{passwordMessage}</Alert>) : null}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"passwordConfirm\"\r\n                                label=\"비밀번호 확인\"\r\n                                type=\"password\"\r\n                                id=\"passwordConfirm\"\r\n                                autoComplete=\"new-passwordComfirm\"\r\n                                value={passwordConfirm} onChange={onChangePasswordConfirm}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {passwordConfirm ? (password === passwordConfirm ? <Alert severity=\"success\">{passwordConfirmMessage}</Alert> : <Alert severity=\"error\">{passwordConfirmMessage}</Alert>) : null}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"Name\"\r\n                                label=\"닉네임\"\r\n                                id=\"Name\"\r\n                                autoComplete=\"given-name\"\r\n                                value={name} onChange={onChangeName}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {name  ? (isName === false ? <Alert severity=\"error\">{nameMessage}</Alert> : <Alert severity=\"success\">{nameMessage}</Alert>) : null}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        disabled={!(isName && isEmail && isPassword && isPasswordConfirm && isSameEmail && isEmailType)}\r\n                        >\r\n                        회원가입\r\n                        </Button>\r\n                        </Box>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Button variant=\"text\" as={Link} to='/login'>로그인 페이지로 돌아가기</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Container>\r\n            </ThemeProvider>\r\n        </>\r\n    )\r\n}","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { useParams } from \"react-router\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Select } from '@mui/material';\r\nimport { useState } from 'react';\r\n\r\nexport default function CreateYoutuber(props) {\r\n    const { onDrawerToggle } = props;\r\n\r\n    const theme = createTheme();\r\n\r\n    const siteNames = useFetch('/api/sitenames');\r\n    const youParams = useParams().youtuber;\r\n    // (항목 추가가 완료되면) Link to처럼 .push 해주면 그 페이지로 바로 이동하게 만들어주는 기능\r\n    const navigate = useNavigate();\r\n\r\n     // form으로 감싸져 있는 버튼을 눌렀을 경우 새로고침 되는 \"기본\"기능을 막아줌 -> e.preventDefalult\r\n     // current 속성을 이용하면 해당 요소에 접근할 수 있고, value는 input에 입력된 값을 얻을 수 있음\r\n    const [siteName, setSiteName] = useState();\r\n    const [code, setCode] = useState();\r\n\r\n    const siteChange = (e) => {\r\n        setSiteName(e.target.value);\r\n      };\r\n\r\n    const CodeChange = (e) => {\r\n        setCode(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        fetch(`/api/items/create` , {\r\n            method : \"POST\",\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body : JSON.stringify({\r\n                youtuber : youParams,\r\n                siteName : siteName,\r\n                code : code\r\n            })\r\n        })\r\n        .then(res => {\r\n            if(res.ok){\r\n                alert(\"생성 완료\");\r\n                navigate(-1);\r\n            }\r\n        })      \r\n    }\r\n\r\n    const goBack = () => {\r\n        navigate(-1);        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n                <Toolbar>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                    <Grid sx={{ display: { sm: 'none', xs: 'block' } }} item>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={onDrawerToggle}\r\n                        edge=\"start\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <AppBar\r\n                component=\"div\"\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                elevation={0}\r\n                sx={{ zIndex: 0 }}\r\n            >\r\n                <Toolbar>\r\n                <Grid container alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs>\r\n                    <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                        {youParams} 코드 추가하기\r\n                    </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <ThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                    >\r\n                    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"channel\"\r\n                                label=\"채널명\"\r\n                                name=\"channel\"\r\n                                InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                value={youParams}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"siteSelectLabel\">사이트</InputLabel>\r\n                                    <Select\r\n                                    labelId=\"siteSelect\"\r\n                                    id=\"sitesSelect\"\r\n                                    label=\"사이트\"\r\n                                    value={siteName} onChange={siteChange}\r\n                                    >\r\n                                        {siteNames.map((siteName) => (\r\n                                            <MenuItem  key={siteName.SiteId} value={siteName.name}>\r\n                                                {siteName.name}\r\n                                            </MenuItem >\r\n                                        ))}\r\n                                    </Select>   \r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"CodeInput\"\r\n                                label=\"코드\"\r\n                                id=\"CodeInput\"\r\n                                value={code} onChange={CodeChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        >\r\n                        추가하기\r\n                        </Button>\r\n                        </Box>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Button variant=\"text\" onClick={goBack}>뒤로가기</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Container>\r\n            </ThemeProvider>\r\n        </>\r\n        \r\n    )\r\n}","import * as React from 'react';\r\nimport { useRef } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nexport default function CreateYoutuber(props) {\r\n    const { onDrawerToggle } = props;\r\n\r\n    const theme = createTheme();\r\n    // (항목 추가가 완료되면) Link to처럼 .push 해주면 그 페이지로 바로 이동하게 만들어주는 기능\r\n    const navigate = useNavigate();\r\n\r\n    const [channelName, setChannelName] = useState();\r\n\r\n    const ChannelChange = (e) => {\r\n        setChannelName(e.target.value);\r\n      };\r\n\r\n     // form으로 감싸져 있는 버튼을 눌렀을 경우 새로고침 되는 \"기본\"기능을 막아줌 -> e.preventDefalult\r\n     // current 속성을 이용하면 해당 요소에 접근할 수 있고, value는 input에 입력된 값을 얻을 수 있음\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        fetch(`/api/youtubers/create` , {\r\n            method : \"POST\",\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body : JSON.stringify({\r\n                youtuber : channelName\r\n            })\r\n        })\r\n        .then(res => {\r\n            if(res.ok){\r\n                alert(\"생성 완료\");\r\n                navigate(-1);\r\n            }\r\n        })   \r\n    }\r\n    // 저장 버튼을 눌렀을 때 입력한 정보들을 얻어오기 useRef 이용해야함\r\n    const channelRef = useRef(null);\r\n\r\n    const goBack = () => {\r\n        navigate(-1);        \r\n    }\r\n    return (\r\n        <>\r\n            <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n                <Toolbar>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                    <Grid sx={{ display: { sm: 'none', xs: 'block' } }} item>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={onDrawerToggle}\r\n                        edge=\"start\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <AppBar\r\n                component=\"div\"\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                elevation={0}\r\n                sx={{ zIndex: 0 }}\r\n            >\r\n                <Toolbar>\r\n                <Grid container alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs>\r\n                    <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                        유튜버 추가하기\r\n                    </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <ThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                    >\r\n                    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                                <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"channel\"\r\n                                label=\"채널명 예시\"\r\n                                name=\"channel\"\r\n                                InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                value={\"지피티\"}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"channel\"\r\n                                label=\"채널명\"\r\n                                name=\"channel\"\r\n                                value={channelName} onChange={ChannelChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        >\r\n                        추가하기\r\n                        </Button>\r\n                        </Box>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Button variant=\"text\" onClick={goBack}>뒤로가기</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Container>\r\n            </ThemeProvider>\r\n        </>\r\n    )\r\n}","import * as React from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Link from '@mui/material/Link';\r\nimport Navigator from './Navigator';\r\nimport Mainpage from './Mainpage';\r\nimport Contents from './Contents';\r\nimport Comments from './Comments';\r\nimport LoginPage from './LoginPage';\r\nimport Signup from './Signup';\r\nimport CreateList from './CreateList';\r\n\r\nimport {BrowserRouter, Route, Routes, Outlet} from 'react-router-dom'\r\nimport CreateYoutuber from './CreateYoutuber';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://github.com/KANGSOONYONG\">\r\n        제작자 Github\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}.\r\n    </Typography>\r\n  );\r\n}\r\n\r\nlet theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#63ccff',\r\n      main: '#009be5',\r\n      dark: '#006db3',\r\n    },\r\n  },\r\n  typography: {\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 26,\r\n      letterSpacing: 0.5,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  components: {\r\n    MuiTab: {\r\n      defaultProps: {\r\n        disableRipple: true,\r\n      },\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  components: {\r\n    MuiDrawer: {\r\n      styleOverrides: {\r\n        paper: {\r\n          backgroundColor: '#081627',\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'none',\r\n        },\r\n        contained: {\r\n          boxShadow: 'none',\r\n          '&:active': {\r\n            boxShadow: 'none',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      styleOverrides: {\r\n        root: {\r\n          marginLeft: theme.spacing(1),\r\n        },\r\n        indicator: {\r\n          height: 3,\r\n          borderTopLeftRadius: 3,\r\n          borderTopRightRadius: 3,\r\n          backgroundColor: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n    MuiTab: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'none',\r\n          margin: '0 16px',\r\n          minWidth: 0,\r\n          padding: 0,\r\n          [theme.breakpoints.up('md')]: {\r\n            padding: 0,\r\n            minWidth: 0,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          padding: theme.spacing(1),\r\n        },\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      styleOverrides: {\r\n        tooltip: {\r\n          borderRadius: 4,\r\n        },\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: 'rgb(255,255,255,0.15)',\r\n        },\r\n      },\r\n    },\r\n    MuiListItemButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          '&.Mui-selected': {\r\n            color: '#4fc3f7',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      styleOverrides: {\r\n        primary: {\r\n          fontSize: 14,\r\n          fontWeight: theme.typography.fontWeightMedium,\r\n        },\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: 'inherit',\r\n          minWidth: 'auto',\r\n          marginRight: theme.spacing(2),\r\n          '& svg': {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      styleOverrides: {\r\n        root: {\r\n          width: 32,\r\n          height: 32,\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 256;\r\n\r\nexport default function Paperbase() {\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const isSmUp = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n    <ThemeProvider theme={theme}>\r\n      <Box sx={{ display: 'flex', minHeight: '100vh' }}>\r\n        <CssBaseline />\r\n        <Box\r\n          component=\"nav\"\r\n          sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        >\r\n          {isSmUp ? null : (\r\n            <Navigator\r\n              PaperProps={{ style: { width: drawerWidth } }}\r\n              variant=\"temporary\"\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n            />\r\n          )}\r\n\r\n          <Navigator\r\n            PaperProps={{ style: { width: drawerWidth } }}\r\n            sx={{ display: { sm: 'block', xs: 'none' } }}\r\n          />\r\n        </Box>\r\n        <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n            <Routes>\r\n              <Route path=\"/\" element={<Mainpage onDrawerToggle={handleDrawerToggle} />} />\r\n              <Route path=\"/youtuber/:youtuber\" element={<Contents onDrawerToggle={handleDrawerToggle} />} />\r\n              <Route path=\"/createList/:youtuber\" element={<CreateList onDrawerToggle={handleDrawerToggle} />} />\r\n              <Route path=\"/login\" element={<LoginPage onDrawerToggle={handleDrawerToggle} />} />\r\n              <Route path=\"/signup\" element={<Signup onDrawerToggle={handleDrawerToggle} />}  />\r\n              <Route path=\"/createyoutuber\" element={<CreateYoutuber onDrawerToggle={handleDrawerToggle} />}  />\r\n            </Routes>\r\n          <Box component=\"main\" sx={{ flex: 1, py: 6, px: 4, bgcolor: '#eaeff1' }}>\r\n          <Comments />\r\n          </Box>\r\n          <Box component=\"footer\" sx={{ p: 2, bgcolor: '#eaeff1' }}>\r\n            <Copyright />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </ThemeProvider>\r\n    </BrowserRouter> \r\n  );\r\n}","import React from 'react';\nimport Paperbase from './component/Paperbase';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <Paperbase />\n      </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}